

------------------ extracted_extracted_slide03_JPA.pdf
slide 02:
 pesquisar no google: "entidade jpa exemplo"

slide 07:
 distribuição das anotações numa entidade


slide 09:
 pra não ter q criar uma regra de sequence no BD usaremos @GeneratedValue(strategy = GenerationType.IDENTITY)


slide 17:
 Implementar em método main


slide 21:
 Enity manager percorre todo o ecosistema da JPA


------------------ após slides

1 - 
 criar projeto dynamic
 configurar para uso da jpa

2 - 
 converter para maven

3 -
 adicionar dependências

4 - 
 configurar web.xml
 
 configurar JPA: 
  persistence.xml (pesquisar no google "persistence.xml jpa postgresql") META-IN
  cirar entidade (pesquisar no google "entidade jpa exemplo")
  anotações

5 - 
 concluir login

6 -
 baixar boostrap
 implementar listagem 

extra:
 implementar exclusão



----------------------------------------------------------
Exemplo de CRUD com JPA: (17/10)
 https://www.devmedia.com.br/jpa-e-hibernate-acessando-dados-em-aplicacoes-java/32711


Login com JPA
 https://www.devmedia.com.br/java-web-criando-uma-tela-de-login-com-jpa-jsf-primefaces-e-mysql/32456


persistence.xml jpa postgresql
 https://gist.github.com/SergioDiniz/886723272d9fd95dd17ecb79b35b66e1


It is mandatory to place persistence.xml in the project’s src/META-INF folder.



<!-- 				<h:commandButton action="#{usuarioManagedBean.editSchoolDetailsById()}" -->

<!-- 				<h:commandButton action="#{usuarioManagedBean.deleteSchoolById(usuario.id)}" -->

