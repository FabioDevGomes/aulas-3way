
-------------------- ajustar para realcionamento com a classe endereço ------------
- Criar classe UsuárioService para tratar regras de negócio
- Somente essa classe (UsuarioService) terá acesso ao DAO


- Implementa regra para matrícula M ou ADM
	private void validarMatricula(Usuario usuario) - em UsuarioService


- Implementa regra para somente ADM poder editar usuários
	if(!usuario.getMatricula().startsWith("ADM")) {


- Criar mensagem de erro no tratamento da exceção passando o e.getMessage() como parâmetro
	em: public String paginaEditar(Usuario usuario) {

	e em: public String incluirUsuarioDb(Usuario usuario) {



- Falar sobre difuculdades de configuração do CDI no Tomcat
	Mostrar como seria a configuração e o uso (@PersistenceContext @Inect) em um servidor de aplicações



- Configurar link para listagem de endereços:
	<h:outputLink class="nav-link" value="/jpa-jsf-v5/restrito/endereco/listagemEnderecoT.xhtml">Listagem Endereços</h:outputLink>

--------------------- MD5 -----------------------------------------------------------------------------------------

- Criar a classe Criptografia 

	public class Criptografia {


--------------------- relacionamento JPA --------------------------------------------------------------------------

- Criar e configurar relacionamento na classe Endereço

	public class Endereco {

		@OneToOne(mappedBy = "endereco")
		private Usuario usuario;

- Configurar relacionamento na classe Usuario

	@OneToOne(cascade=CascadeType.ALL, fetch=FetchType.EAGER, orphanRemoval=true)
	private Endereco endereco;





-------------------- integrar com API de buscar e preencher por CEP dos correios (exemplo no proj fluig)------------
	


